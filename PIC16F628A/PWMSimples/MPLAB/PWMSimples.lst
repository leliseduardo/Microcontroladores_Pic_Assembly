MPASM  5.51                    PWMSIMPLES.ASM   8-27-2020  10:08:08         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;
                      00002 ;               O objetivo deste programa é utilizar o modo PWM do módulo CCP. Este módulo utiliza o tim
                            er 2 para fazer a contagem
                      00003 ;       e implementar o PWM. Simultâneamente o código irá utilizar o timer 0 para fazer a varredura de d
                            ois botões, que têm a 
                      00004 ;       a função de aumentar e diminuit o duty cicle do PWM.
                      00005 ;
                      00006 ;               A equação para encontrar o período de oscilação do PWM é a seguinte:
                      00007 ;
                      00008 ;               Período PWM = (PR2 + 1) * ciclo de máquina * prescaler do timer2
                      00009 ;               Período PWM     = (255 + 1) * 1us * 16
                      00010 ;               período PWM     = 4,096ms
                      00011 ;               Frequência PWM = 244,14Hz
                      00012 ;
                      00013 ;               TIMER0
                      00014 ;
                      00015 ;               Overflow = (255 - TMR0) * prescale * ciclo de máquina
                      00016 ;               Overflow = 105 * 128 * 1us
                      00017 ;               Overflow = 13,4ms
                      00018 ;
                      00019 ;               Tanto na simulação quanto na prática o programa e o circuito funcionaram como esperado.
                      00020 ;
                      00021 
                      00022         list            p=16f628a                                       ; Informa o microcontrolador uti
                            lizado
                      00023         
                      00024 ; --- Inclusão de arquivos ---
                      00025 
                      00026         #include        <p16f628a.inc>                          ; Inclui o arquivos com os registradores
                             do Pic
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F628A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00385         LIST
                      00027                 
                      00028 ; --- Fuse bits ---
                      00029 
2007   3F21           00030         __config _XT_OSC & _WDT_OFF & _PWRTE_ON & _MCLRE_ON & _BOREN_OFF & _LVP_OFF & _CPD_OFF & _CP_OFF
                      00031         
                      00032 ; Cristal externo de 4MHz, Power Up Timer habilitado e Master Clear habilitado
                      00033 
                      00034 ; --- Paginação de memória ---
                      00035 
                      00036         #define         bank0   bcf     STATUS,RP0              ; Cria mnemônico para selecionar o banco
                             0 de memória
                      00037         #define         bank1   bsf     STATUS,RP0              ; Cria mnemônico para selecionar o banco
                             1 de memória
                      00038         
MPASM  5.51                    PWMSIMPLES.ASM   8-27-2020  10:08:08         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00039 ; --- Mapeamento de hardware ---
                      00040 
                      00041         #define         led1            PORTA,3                 ; Cria mnemônico para led1 em RA3
                      00042         #define         led2            PORTA,2                 ; Cria mnemônico para led2 em RA2
                      00043         #define         botao1          PORTB,0                 ; Cria mnemônico para botao1 em RB0
                      00044         #define         botao2          PORTB,1                 ; Cria mnemônico para botao2 em RB1
                      00045         
                      00046 ; --- Registradores de uso geral ---
                      00047 
                      00048         cblock          H'20'                                           ; Endereço inicial para configur
                            ar os resgistradores de uso geral
                      00049         
  00000020            00050         W_TEMP                                                                  ; Armazena valor de W te
                            mporariamente
  00000021            00051         STATUS_TEMP                                                             ; Armazena o valor de ST
                            ATUS temporariamente
                      00052         
                      00053         endc                                                                    ; Termina a configuração
                             dos registradores de uso geral
                      00054         
                      00055         
                      00056 ; --- Vetor de Reset ---                        
                      00057 
0000                  00058         org                     H'0000'                                         ; Endereço de origem do 
                            vetor de Reset
                      00059         
0000   2823           00060         goto            inicio                                          ; Desvia para programa principal
                      00061         
                      00062         
                      00063 ; --- Vetor de interrupção ---
                      00064 
0004                  00065         org                     H'0004'                                         ; Endereço de origem do 
                            vetor de Interrupção
                      00066         
                      00067 ; -- Salvamento de contexto --
                      00068 
0004   00A0           00069         movwf           W_TEMP                                          ; W_TEMP = w
0005   0E03           00070         swapf           STATUS,w                                        ; w = STATUS (com nibbles invert
                            idos)
0006   1283           00071         bank0                                                                   ; Seleciona banco 0 de m
                            emória
0007   00A1           00072         movwf           STATUS_TEMP                                     ; STATUS_TEMP = STATUS (com nibb
                            les invertidos)
                      00073 
                      00074 ; -- Fim do salvamento de contexto --
                      00075 
                      00076         ; Desenvolvimento da ISR...
                      00077         
0008   1D0B           00078         btfss           INTCON,T0IF                                     ; Testa se flag T0IF setou, se s
                            im, pula uma linha
0009   281E           00079         goto            exit_ISR                                        ; Se não, sai da interrupção
000A   110B           00080         bcf                     INTCON,T0IF                                     ; Limpa flag T0IF
                      00081         
MPASM  5.51                    PWMSIMPLES.ASM   8-27-2020  10:08:08         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B   3096           00082         movlw           D'150'                                          ; w = 150d
000C   0081           00083         movwf           TMR0                                            ; Recarrega TMR0 = 150d
                      00084         
000D   1C06           00085         btfss           botao1                                          ; Testa se botao1 foi pressionad
                            o, se foi, NÃO pula uma linha
000E   2812           00086         goto            incrementa_PWM                          ; Se botao1 foi pressionado, desvia para
                             label incrementa_PWM
                      00087         
000F   1C86           00088         btfss           botao2                                          ; Testa se botao2 foi pressionad
                            o, se foi, NÃO pula uma linha
0010   2818           00089         goto            decrementa_PWM                          ; Se botao2 foi pressionado, desvia para
                             label decrementa_PWM
                      00090         
0011   281E           00091         goto            exit_ISR                                        ; Se botao1 nem botao2 foram pre
                            ssionados, sai da interrupção
                      00092         
0012                  00093 incrementa_PWM:
                      00094 
0012   30FF           00095         movlw           D'255'                                          ; w = 255d
0013   0615           00096         xorwf           CCPR1L,w                                        ; Faz lógica XOR com CCPR1L para
                             testar se este reg já chegou a 255d
0014   1903           00097         btfsc           STATUS,Z                                        ; Se não chegou, Z é zero e pula
                             uma linha para continuar incrementando
0015   281E           00098         goto            exit_ISR                                        ; Se ja chegou, Z é um e sai da 
                            interrupção
0016   0A95           00099         incf            CCPR1L,F                                        ; Incrementa CCPR1L
0017   281E           00100         goto            exit_ISR                                        ; Sai da interrupção
                      00101         
0018                  00102 decrementa_PWM:
                      00103 
0018   3000           00104         movlw           D'0'                                            ; w = 0d
0019   0615           00105         xorwf           CCPR1L,w                                        ; Faz lógica XOR com CCPR1L para
                             testar se este reg já chegou a 0d
001A   1903           00106         btfsc           STATUS,Z                                        ; Se não chegou, Z é zero e pula
                             uma linha para continuar decrementando
001B   281E           00107         goto            exit_ISR                                        ; Se já chegou, Z é 1 e sai da i
                            nterrupção
001C   0395           00108         decf            CCPR1L,F                                        ; Decrementa CCPR1L
001D   281E           00109         goto            exit_ISR                                        ; Sai da interrupção
                      00110         
                      00111 ; -- Recuperação de contexto --
                      00112 
001E                  00113 exit_ISR:
                      00114 
001E   0E21           00115         swapf           STATUS_TEMP,w                           ; w = STATUS_TEMP (com nibbles reinverti
                            dos = STATUS original)
001F   0083           00116         movwf           STATUS                                          ; STATUS = STATUS_TEMP (STATUS o
                            riginal)
0020   0EA0           00117         swapf           W_TEMP,F                                        ; W_TEMP = W_TEMP (com nibbles i
                            nvertidos)
0021   0E20           00118         swapf           W_TEMP,w                                        ; w = W_TEMP (com nibbles reinve
                            rtidos = w original)
                      00119         
MPASM  5.51                    PWMSIMPLES.ASM   8-27-2020  10:08:08         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0022   0009           00120         retfie                                                                  ; Retorna ao loop infini
                            to
                      00121 
                      00122 ; -- Fim da recuperação de contexto -- 
                      00123 
                      00124 
                      00125 ; --- Inicio do programa principal ---
                      00126 
0023                  00127 inicio: 
                      00128 
0023   1683           00129         bank1                                                                   ; Seleciona banco 1 de m
                            emória
0024   3086           00130         movlw           H'86'                                           ; w = 86h
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0025   0081           00131         movwf           OPTION_REG                                      ; OPTION_REG = 86h, configura o 
                            prescaler do timer0 em 1:128 e desabilita os pull-ups internos
0026   30F3           00132         movlw           H'F3'                                           ; w = F3h
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0027   0085           00133         movwf           TRISA                                           ; TRISA = F3h, configura apenas 
                            RA3 e RA2 como saídas digitais
0028   30F7           00134         movlw           H'F7'                                           ; w = F7h
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0029   0086           00135         movwf           TRISB                                           ; TRISB = F7h, configura apenas 
                            RB3 como saída digital
002A   30FF           00136         movlw           D'255'                                          ; w = 255d
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002B   0092           00137         movwf           PR2                                                     ; PR2 = 255d
002C   1283           00138         bank0                                                                   ; Seleciona banco 0 de m
                            emória
002D   3007           00139         movlw           H'07'                                           ; w = 07h
002E   009F           00140         movwf           CMCON                                           ; CMCON = 07h, desabilita os com
                            paradores internos
002F   30E0           00141         movlw           H'E0'                                           ; w = E0h
0030   008B           00142         movwf           INTCON                                          ; INTCON = E0h, habilita a inter
                            upção global, por periféricos e a interrupção do timer0
0031   3096           00143         movlw           D'150'                                          ; w = 150d
0032   0081           00144         movwf           TMR0                                            ; inicia contagem do TMR0 em 150
                            d
0033   3006           00145         movlw           H'06'                                           ; w = 06h
0034   0092           00146         movwf           T2CON                                           ; T2CON = 06h, habilita o timer 
                            2 e configura o prescaler 1:16
0035   300C           00147         movlw           H'0C'                                           ; w = 0Ch
0036   0097           00148         movwf           CCP1CON                                         ; CCP1CON = 0Ch, configura o mód
                            ulo CCP no modo PWM
0037   0195           00149         clrf            CCPR1L                                          ; Zera byte menos significativo 
                            do contador do PWM
                      00150         
                      00151         
                      00152 
                      00153 ; -- Loop infinito -- 
                      00154 
0038                  00155 loop:                                                                           ; Cria label para loop i
                            nfinito
MPASM  5.51                    PWMSIMPLES.ASM   8-27-2020  10:08:08         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00156 
                      00157 
0038   2838           00158         goto loop                                                               ; Desvia para loop infin
                            ito     
                      00159         
                      00160         
                      00161 
Warning[205]: Found directive in column 1. (end)
                      00162 end
MPASM  5.51                    PWMSIMPLES.ASM   8-27-2020  10:08:08         PAGE  6


SYMBOL TABLE
  LABEL                             VALUE 

ADDEN                             00000003
ADEN                              00000003
BRGH                              00000002
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CIS                               00000003
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000001F
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
DATA_CP_OFF                       00003FFF
DATA_CP_ON                        00003EFF
DC                                00000001
EEADR                             0000009B
EECON1                            0000009C
EECON2                            0000009D
EEDATA                            0000009A
EEIE                              00000007
EEIF                              00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
NOT_BO                            00000000
NOT_BOD                           00000000
NOT_BOR                           00000000
NOT_PD                            00000003
NOT_POR                           00000001
MPASM  5.51                    PWMSIMPLES.ASM   8-27-2020  10:08:08         PAGE  7


SYMBOL TABLE
  LABEL                             VALUE 

NOT_RBPU                          00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
OERR                              00000001
OPTION_REG                        00000081
OSCF                              00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PIE1                              0000008C
PIR1                              0000000C
PORTA                             00000005
PORTB                             00000006
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RP0                               00000005
RP1                               00000006
RX9                               00000006
RX9D                              00000000
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
STATUS                            00000003
STATUS_TEMP                       00000021
SYNC                              00000004
T0CS                              00000005
MPASM  5.51                    PWMSIMPLES.ASM   8-27-2020  10:08:08         PAGE  8


SYMBOL TABLE
  LABEL                             VALUE 

T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRMT                              00000001
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
MPASM  5.51                    PWMSIMPLES.ASM   8-27-2020  10:08:08         PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

TXSTA                             00000098
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             0000009F
VREN                              00000007
VROE                              00000006
VRR                               00000005
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
W_TEMP                            00000020
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DEVID1                           00002006
_ER_OSC_CLKOUT                    00003FFF
_ER_OSC_NOCLKOUT                  00003FFE
_EXTCLK_OSC                       00003FEF
_FOSC_ECIO                        00003FEF
_FOSC_EXTRCCLK                    00003FFF
_FOSC_EXTRCIO                     00003FFE
_FOSC_HS                          00003FEE
_FOSC_INTOSCCLK                   00003FFD
_FOSC_INTOSCIO                    00003FFC
_FOSC_LP                          00003FEC
_FOSC_XT                          00003FED
_HS_OSC                           00003FEE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_INTOSC_OSC_CLKOUT                00003FFD
_INTOSC_OSC_NOCLKOUT              00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FEC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC_CLKOUT                    00003FFF
MPASM  5.51                    PWMSIMPLES.ASM   8-27-2020  10:08:08         PAGE 10


SYMBOL TABLE
  LABEL                             VALUE 

_RC_OSC_NOCLKOUT                  00003FFE
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FED
__16F628A                         00000001
__DEBUG                           1
bank0                             bcf     STATUS,RP0
bank1                             bsf     STATUS,RP0
botao1                            PORTB,0
botao2                            PORTB,1
decrementa_PWM                    00000018
exit_ISR                          0000001E
incrementa_PWM                    00000012
inicio                            00000023
led1                              PORTA,3
led2                              PORTA,2
loop                              00000038


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXX-------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:    54
Program Memory Words Free:  1994


Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :     4 reported,     0 suppressed

