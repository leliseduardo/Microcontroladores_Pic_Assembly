MPASM  5.51               VARREDUTABOTOES.ASM   8-25-2020  21:47:10         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;
                      00002 ;               PIC16F628A              Clock = 4 MHz           Ciclo de máquina = 1us
                      00003 ;
                      00004 ;               Este programa tem a função de, a partir da interrupção do timer0, fazer uma varredura de
                             dois botôes que, quando
                      00005 ;       clicados, irão inverter o estado de um led. Serão dois botões dois leds.
                      00006 ;
                      00007 ;               Timer 0
                      00008 ;
                      00009 ;               Overflow = (256 - TMR0) * prescaler * ciclo de máquina
                      00010 ;               Overflow = 246 * 128 * 1us
                      00011 ;               Overflow = 31ms
                      00012 ;               
                      00013 ;               Na simulação e na prática, o circuito e o programa funcionaram como esperado. A base de 
                            tempo programada para a
                      00014 ;       varredura dos botôes funcionou como esperado. O tempo é o tempo de overflow vezes o tempo de con
                            t. 
                      00015 ;               Overflow * cont = 31ms * 6 = +-186ms    
                      00016 ;
                      00017 
                      00018         list            p=16f628a                                       ; Informa o microcontrolador uti
                            lizado
                      00019 
                      00020 ; --- Inclusão de arquivos ---
                      00021 
                      00022         #include        <p16f628a.inc>                          ; Inclui o arquivo com os registradores 
                            do Pic
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F628A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00385         LIST
                      00023         
                      00024 ; --- Fuse bits ---
                      00025 
2007   3F21           00026         __config        _XT_OSC & _WDT_OFF & _PWRTE_ON & _MCLRE_ON & _BOREN_OFF & _LVP_OFF & _CPD_OFF & 
                            _CP_OFF
                      00027         
                      00028 ;       Clock de 4MHz, Power Up Time e Master Clear habilitados
                      00029 
                      00030 ; --- Paginação de memória ---
                      00031 
                      00032         #define         bank0   bcf     STATUS,RP0              ; Cria mnemônico para selecionar o banco
                             0 de memória
                      00033         #define         bank1   bsf     STATUS,RP0              ; Cria mnemônico para selecionar o banco
                             1 de memória
                      00034         
                      00035 ; --- Saídas ---
                      00036 
MPASM  5.51               VARREDUTABOTOES.ASM   8-25-2020  21:47:10         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00037         #define         led1    PORTA,3                         ; Cria um mnemônico para led1 em RA3
                      00038         #define         led2    PORTA,2                         ; Cria um mnemônico para led2 em RA2
                      00039         
                      00040 ; --- Entradas ---
                      00041 
                      00042         #define         botao1  PORTB,0                         ; Cria um mnemônico para botao1 em RB0
                      00043         #define         botao2  PORTB,1                         ; Cria um mnemônico para botao2 em RB1
                      00044         
                      00045 ; --- Registadores de uso geral ---
                      00046 
                      00047         cblock          H'20'                                           ; Cria registradores de uso gera
                            l a partir do endereço 20h de memória
                      00048         
  00000020            00049         W_TEMP                                                                  ; Armazena conteúdo de W
                             temporariamente
  00000021            00050         STATUS_TEMP                                                             ; Armazena conteúdo de S
                            TATUS temporariamente
  00000022            00051         cont                                                                    ; Base de tempo para o t
                            imer0
                      00052         
                      00053         endc
                      00054 
                      00055 ; --- Vetor de Reset ---
                      00056 
0000                  00057         org                     H'0000'                                         ; Origem do endereço do 
                            vetor de Reset
0000   2820           00058         goto            inicio                                          ; Desvia para label inicio
                      00059         
                      00060 ; --- Vetor de Interrupção
0004                  00061         org             H'0004'                                         ; Origem do endereço do vetor de
                             Interrupção
                      00062         
                      00063 ; --- Salva contexto ---
                      00064         
0004   00A0           00065         movwf           W_TEMP                                          ; W_TEMP = w
0005   0E03           00066         swapf           STATUS,w                                        ; w = STATUS (com nibbles invert
                            idos)
0006   1283           00067         bank0                                                                   ; Seleciona o banco 0 de
                             memória
0007   00A1           00068         movwf           STATUS_TEMP                                     ; STATUS_TEMP = w = STATUS (com 
                            nibbles invertidos)
                      00069         
                      00070 ; --- Final do salvamento de contexto ---
                      00071 
0008   1D0B           00072         btfss           INTCON,T0IF                                     ; Testa se T0IF setou, se sim, p
                            ula uma linha
0009   281B           00073         goto            exit_ISR                                        ; Se não, saí da interrupção
000A   110B           00074         bcf                     INTCON,T0IF                                     ; Limpa flag T0IF, para 
                            uma nova interrupção
000B   300A           00075         movlw           D'10'                                           ; w = D'10'
000C   0081           00076         movwf           TMR0                                            ; Recarrega TMR0 com 10d
                      00077         
000D   0BA2           00078         decfsz          cont,F                                          ; Decrementa cont e testa se che
MPASM  5.51               VARREDUTABOTOES.ASM   8-25-2020  21:47:10         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            gou a zero, se sim, pula uma linha
000E   281B           00079         goto            exit_ISR                                        ; Se não, saí da interrupção
                      00080         
000F   3006           00081         movlw           D'6'                                            ; w = 6d
0010   00A2           00082         movwf           cont                                            ; Recarrega cont com 6d
                      00083         
0011   1C06           00084         btfss           botao1                                          ; Testa se o botao1 foi pression
                            ado, se foi, NÃO pula uma linha
0012   2816           00085         goto            complementa_Led1                        ; Desvia para lebel complemente_Led1
                      00086         
0013   1C86           00087         btfss           botao2                                          ; Testa se o botao2 foi pression
                            ado, se foi, NÃO pula uma linha
0014   2819           00088         goto            complementa_Led2                        ; Desvia para label complementa_Led2
                      00089         
0015   281B           00090         goto            exit_ISR                                        ; Sai da interrupção
                      00091         
0016                  00092 complementa_Led1:
                      00093 
0016   3008           00094         movlw           B'00001000'                                     ; Move máscara para w, para comp
                            lementar led1
0017   0685           00095         xorwf           PORTA,F                                         ; Faz lógica XOR entre W e porta
                            , complementando RA3, logo, Led1
0018   281B           00096         goto            exit_ISR                                        ; Sai da interrupção
                      00097         
0019                  00098 complementa_Led2:
                      00099 
0019   3004           00100         movlw           B'00000100'                                     ; Move máscara para w, para comp
                            lementar led2
001A   0685           00101         xorwf           PORTA,F                                         ; Faz lógica XOR entre W e porta
                            , complementando RA2, logo, led2
                      00102 
                      00103 ; --- Recupera contexto ---
                      00104 
001B                  00105 exit_ISR:
                      00106 
001B   0E21           00107         swapf           STATUS_TEMP,w                           ; w = STATUS_TEMP (nibbles invertidos) =
                             STATUS (original)
001C   0083           00108         movwf           STATUS                                          ; STATUS = w = STATUS (original)
001D   0EA0           00109         swapf           W_TEMP,F                                        ; W_TEMP = W_TEMP (com nibbles i
                            nvertidos)
001E   0E20           00110         swapf           W_TEMP,w                                        ; w = W_TEMP = w (original)
                      00111         
001F   0009           00112         retfie
                      00113         
                      00114 ; --- Fim da interrupção
                      00115         
                      00116         
0020                  00117 inicio:
                      00118 
0020   1283           00119         bank0                                                                   ; Seleciona o banco 0 de
                             memória
0021   3007           00120         movlw           H'07'                                           ; w = 07h
0022   009F           00121         movwf           CMCON                                           ; CMCON = 07h, desabilita os com
MPASM  5.51               VARREDUTABOTOES.ASM   8-25-2020  21:47:10         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            paradores internos
0023   30A0           00122         movlw           H'A0'                                           ; w = 'A0'
0024   008B           00123         movwf           INTCON                                          ; INTCON = A0h, habilita interru
                            pção global e a interrupção do timer0
0025   1683           00124         bank1                                                                   ; Seleciona o banco 1 de
                             memória
0026   3086           00125         movlw           H'86'                                           ; w = 86h
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0027   0081           00126         movwf           OPTION_REG                                      ; OPTION_REG = 86h, desabilita o
                            s pull-ups internos, associa o prescaler do timer 0 e configura para 1:128
0028   30F3           00127         movlw           H'F3'                                           ; w = F3h
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0029   0085           00128         movwf           TRISA                                           ; TRISA = F3h, configura RA3 e R
                            A2 como saídas digital
002A   30FF           00129         movlw           H'FF'                                           ; w = FFh
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002B   0086           00130         movwf           TRISB                                           ; TRISB = FFh, configura todo po
                            rtb como entrada digital
002C   1283           00131         bank0                                                                   ; Seleciona o banco 0 de
                             memória
002D   300A           00132         movlw           D'10'                                           ; w = 10d
002E   0081           00133         movwf           TMR0                                            ; TMR0 inicia sua contagem em 10
                            d
002F   1185           00134         bcf                     led1                                            ; Inicia led1 em Low
0030   1105           00135         bcf                     led2                                            ; Inicia led2 em Low
0031   3006           00136         movlw           D'6'                                            ; w = 6d
0032   00A2           00137         movwf           cont                                            ; cont = 6d
                      00138         
                      00139         
0033                  00140 loop:                                                                           ; Cria loop infinito
                      00141 
                      00142 
0033   2833           00143         goto            $                                                       ; Loop infinito sem roti
                            na
                      00144         
                      00145         
Warning[205]: Found directive in column 1. (end)
                      00146 end
MPASM  5.51               VARREDUTABOTOES.ASM   8-25-2020  21:47:10         PAGE  5


SYMBOL TABLE
  LABEL                             VALUE 

ADDEN                             00000003
ADEN                              00000003
BRGH                              00000002
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CIS                               00000003
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000001F
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
DATA_CP_OFF                       00003FFF
DATA_CP_ON                        00003EFF
DC                                00000001
EEADR                             0000009B
EECON1                            0000009C
EECON2                            0000009D
EEDATA                            0000009A
EEIE                              00000007
EEIF                              00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
NOT_BO                            00000000
NOT_BOD                           00000000
NOT_BOR                           00000000
NOT_PD                            00000003
NOT_POR                           00000001
MPASM  5.51               VARREDUTABOTOES.ASM   8-25-2020  21:47:10         PAGE  6


SYMBOL TABLE
  LABEL                             VALUE 

NOT_RBPU                          00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
OERR                              00000001
OPTION_REG                        00000081
OSCF                              00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PIE1                              0000008C
PIR1                              0000000C
PORTA                             00000005
PORTB                             00000006
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RP0                               00000005
RP1                               00000006
RX9                               00000006
RX9D                              00000000
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
STATUS                            00000003
STATUS_TEMP                       00000021
SYNC                              00000004
T0CS                              00000005
MPASM  5.51               VARREDUTABOTOES.ASM   8-25-2020  21:47:10         PAGE  7


SYMBOL TABLE
  LABEL                             VALUE 

T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRMT                              00000001
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
MPASM  5.51               VARREDUTABOTOES.ASM   8-25-2020  21:47:10         PAGE  8


SYMBOL TABLE
  LABEL                             VALUE 

TXSTA                             00000098
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             0000009F
VREN                              00000007
VROE                              00000006
VRR                               00000005
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
W_TEMP                            00000020
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DEVID1                           00002006
_ER_OSC_CLKOUT                    00003FFF
_ER_OSC_NOCLKOUT                  00003FFE
_EXTCLK_OSC                       00003FEF
_FOSC_ECIO                        00003FEF
_FOSC_EXTRCCLK                    00003FFF
_FOSC_EXTRCIO                     00003FFE
_FOSC_HS                          00003FEE
_FOSC_INTOSCCLK                   00003FFD
_FOSC_INTOSCIO                    00003FFC
_FOSC_LP                          00003FEC
_FOSC_XT                          00003FED
_HS_OSC                           00003FEE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_INTOSC_OSC_CLKOUT                00003FFD
_INTOSC_OSC_NOCLKOUT              00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FEC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC_CLKOUT                    00003FFF
MPASM  5.51               VARREDUTABOTOES.ASM   8-25-2020  21:47:10         PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

_RC_OSC_NOCLKOUT                  00003FFE
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FED
__16F628A                         00000001
__DEBUG                           1
bank0                             bcf     STATUS,RP0
bank1                             bsf     STATUS,RP0
botao1                            PORTB,0
botao2                            PORTB,1
complementa_Led1                  00000016
complementa_Led2                  00000019
cont                              00000022
exit_ISR                          0000001B
inicio                            00000020
led1                              PORTA,3
led2                              PORTA,2
loop                              00000033


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXX------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:    49
Program Memory Words Free:  1999


Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :     3 reported,     0 suppressed

