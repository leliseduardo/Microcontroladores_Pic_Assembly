MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;
                      00002 ;               O objetivo deste programa é implementar um voltimetro a partir da leitura do conversor A
                            D. Para isso, necessita-se
                      00003 ;       utilizar as operações de multiplicação e divisão, que serão obtidas da nota de aplicação AN544, 
                            feira pela microchip.
                      00004 ;               No circuito deste programa, pode-se utilizar um divisor de tensão que receba, por exempl
                            o, até 25V e entregue de
                      00005 ; 0V a 5V na entrada analógica do do Pic. Assim, mede-se indiretamente a tensão de 0V a 25V.
                      00006 ;               Para fazer a conversão do valor lido no ADC em tensão, basta fazer uma regra de 3:
                      00007 ;
                      00008 ;               255 ----------  25V
                      00009 ;               ADC ---------- Tensão
                      00010 ;                       Tensão = ( ADC * 25V) / 255
                      00011 ;
                      00012 ;               Para se ter fazer com que o resultado seja lido com casas decimais, multiplica-se o resu
                            ltado por 100, para que,
                      00013 ;       caso se utilize um display, seja colocado um ponto para representar as casas decimais. Logo, mul
                            tiplicando a tensão
                      00014 ;       por 100, a equação fica
                      00015 ;       
                      00016 ;                       Tensão = (ADC * 250) / 255
                      00017 ;
                      00018 ;               Para fazer uma equação desta em Assembly, necessita-se criar as funções de multiplicação
                             e divisão, trabalho já
                      00019 ;       realizado pela Microchip em sua nota de aplicação AN544.
                      00020 ;
                      00021 ;               No debug o programa funcionou como esperado.
                      00022 ;
                      00023 
                      00024         list p=16f876a                                                  ; Informa o microcontrolador uti
                            lizado
                      00025         
                      00026         
                      00027 ; --- Documentação ---
                      00028 
                      00029 
                      00030         #include        <p16f876a.inc>                          ; Inclui o arquivo que contém os registr
                            adores do Pic
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F876A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00524         LIST
                      00031         
                      00032         
                      00033 ; --- Fuse bits ---
                      00034 
                      00035         
2007   3F31           00036         __config        _XT_OSC & _WDT_OFF & _PWRTE_ON & _BOREN_OFF & _LVP_OFF  & _CP_OFF & _CPD_OFF
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00037         
                      00038         ; Configura clock  4MHz, liga o Power Up Timer e desliga o Master Clear
                      00039         
                      00040         
                      00041 ; --- Paginação de memória ---
                      00042 
                      00043         
                      00044         #define         bank0   bcf     STATUS,RP0              ; Cria mnemônico para selecionar o banco
                             0 de memória
                      00045         #define         bank1   bsf     STATUS,RP0              ; Cria mnemônico para selecionar o banco
                             1 de memória
                      00046         
                      00047         
                      00048 ; --- Mapeamento de hardware ---
                      00049 
                      00050 
                      00051         
                      00052         
                      00053 ; --- Registradores de uso geral ---
                      00054 
                      00055 
                      00056         cblock          H'20'                                           ; Endereço de inicio para config
                            uração de registradores de uso geral
                      00057         
  00000020            00058         W_TEMP                                                                  ; Armazena o conteúdo de
                             w temporariamente
  00000021            00059         STATUS_TEMP                                                             ; Armazena o conteúdo de
                             STATUS temporariamente
  00000022            00060         adc                                                                             ; Armazena a lei
                            tura de ADC
                      00061         
  00000023            00062         REG1H                                                                   ;byte alto registrador 1
                             de 16 bits utilizado na rotina de divisão
  00000024            00063         REG1L                                                                   ;byte baixo registrador 
                            1 de 16 bits utilizado na rotina de divisão
  00000025            00064         REG2H                                                                   ;byte alto registrador 2
                             de 16 bits utilizado na rotina de divisão
  00000026            00065         REG2L                                                                   ;byte baixo registrador 
                            2 de 16 bits utilizado na rotina de divisão
  00000027            00066         REG3H                                                                   ;byte alto registrador 3
                             de 16 bits utilizado na rotina de divisão
  00000028            00067         REG3L                                                                   ;byte baixo registrador 
                            3 de 16 bits utilizado na rotina de divisão
  00000029            00068         REG4H                                                                   ;byte alto registrador 4
                             de 16 bits utilizado na rotina de divisão
  0000002A            00069         REG4L                                                                   ;byte baixo registrador 
                            4 de 16 bits utilizado na rotina de divisão
  0000002B            00070         AUX_H                                                                   ;byte baixo de registrad
                            or de 16 bits para retornar valor da div
  0000002C            00071         AUX_L                                                                   ;byte baixo de registrad
                            or de 16 bits para retornar valor da div
  0000002D            00072         AUX_TEMP                                                                ;contador temporário usa
                            do na rotina de divisão
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002E            00073         REG_MULT1                                                               ;registrador 1 para mult
                            iplicação
  0000002F            00074         REG_MULT2                                                               ;registrador 2 para mult
                            iplicação
  00000030            00075         REG_AUX                                                                 ;registrador auxiliar
  00000031            00076         UNI                                                                             ;armazena unidad
                            e
  00000032            00077         DEZ_A                                                                   ;armazena unidade da dez
                            ena
  00000033            00078         DEZ_B                                                                   ;armazena dezena
                      00079         
                      00080         
                      00081         endc                                                                    ; Fim da configuração de
                             registradores de uso geral
                      00082         
Warning[207]: Found label after column 1. (cont1)
  00000023            00083         cont1           equ             H'23'                           ; Contador auxiliar no banco 0 d
                            e memória
Warning[207]: Found label after column 1. (cont2)
  000000A1            00084         cont2           equ             H'A1'                           ; Contador auxiliar no banco 1 d
                            e memória
                      00085         
                      00086 ; --- Vetor de Reset ---
                      00087 
                      00088         
0000                  00089         org                     H'0000'                                         ; Endereço de origem do 
                            vetor de Reset
                      00090         
0000   280D           00091         goto            inicio                                          ; Desvia para o programa princip
                            al      
                      00092         
                      00093         
                      00094 ; --- Vetor de Interrupção ---
                      00095 
                      00096         
0004                  00097         org                     H'0004'                                         ; Endereço de origem do 
                            vetor de Interrupção
                      00098         
                      00099 ; -- Salvamento de contexto --
                      00100 
0004   00A0           00101         movwf           W_TEMP                                          ; W_TEMP = w
0005   0E03           00102         swapf           STATUS,w                                        ; w = STATUS (com nibbles invert
                            idos)
0006   1283           00103         bank0                                                                   ; Seleciona o banco 0 de
                             memória
0007   00A1           00104         movwf           STATUS_TEMP                                     ; STATUS_TEMP = STATUS (com nibb
                            les invertidos)
                      00105         
                      00106 ; -- Fim do salvamento de contexto
                      00107 
                      00108         ; Desenvolvimento da ISR...
                      00109         
                      00110         
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00111 ; -- Recuperação de contexto --
                      00112 
0008                  00113 exit_ISR:
                      00114 
0008   0E21           00115         swapf           STATUS_TEMP,w                           ; w = STATUS (original)
0009   0083           00116         movwf           STATUS                                          ; STATUS = STATUS (original)
000A   0EA0           00117         swapf           W_TEMP,F                                        ; W_TEMP = w (com nibbles invert
                            idos)
000B   0E20           00118         swapf           W_TEMP,w                                        ; W_TEMP = w (original)
                      00119         
000C   0009           00120         retfie                                                                  ; Retorna para o endereç
                            o que estava quando ocorreu a interrupção
                      00121         
                      00122 ; -- Fim da recuperação de contexto --
                      00123 
                      00124 
                      00125 ; --- Programa principal ---
                      00126 
000D                  00127 inicio:                                                                         ; Cria label do programa
                             principal
                      00128 
000D   1683           00129         bank1                                                                   ; Seleciona banco 1 de m
                            emória
000E   30FF           00130         movlw           H'FF'                                           ; w = FF
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000F   0085           00131         movwf           TRISA                                           ; Configura todo PORTA como entr
                            ada
0010   3000           00132         movlw           H'00'                                           ; w = 00
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0011   0086           00133         movwf           TRISB                                           ; Configura todo PORTB como saíd
                            a digital
0012   2025           00134         call            configura_ADC                           ; Chama subrotina configura_ADC
                      00135 
                      00136 
                      00137 ; -- Loop infinito --
                      00138 
0013                  00139 loop:                                                                           ; Cria label para loop i
                            nfinito
                      00140 
0013   151F           00141         bsf                     ADCON0,GO_DONE                          ; Inicia leitura do ADC
                      00142         
0014                  00143 espera_leitura:
                      00144 
0014   191F           00145         btfsc           ADCON0,GO_DONE                          ; Testa se flag GO_DONE limpou, se sim, 
                            pula uma linha
0015   2814           00146         goto            espera_leitura                          ; Se não limpou, desvia para label esper
                            a_leitura
                      00147         
0016   081E           00148         movf            ADRESH,w                                        ; w = ADRESH, armazena em w o co
                            nteúdo lido pelo ADC
0017   00AE           00149         movwf           REG_MULT1                                       ; REG_MULT1 = w = ADRESH
0018   30FA           00150         movlw           D'250'                                          ; w = 250d
0019   00AF           00151         movwf           REG_MULT2                                       ; REG_MULT2 = 250d
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001A   202C           00152         call            multip                                          ; Chama a subrotina de multiplic
                            ação
001B   082B           00153         movf            AUX_H,w                                         ; w = AUX_H, armazena em w o con
                            teúdo mais significativo do resultado da mult
001C   00A5           00154         movwf           REG2H                                           ; REG2H = AUX_H
001D   082C           00155         movf            AUX_L,w                                         ; w = AUX_L, armazena em w o con
                            teúdo menos significativo do resultado da mult
001E   00A6           00156         movwf           REG2L                                           ; REG2L = AUX_L
001F   01A3           00157         clrf            REG1H                                           ; Limpa REG1H
0020   30FF           00158         movlw           D'255'                                          ; w = 255d
0021   00A4           00159         movwf           REG1L                                           ; REG1L = 255d
0022   2051           00160         call            divid                                           ; Chama subrotina de divisão
0023   0826           00161         movf            REG2L,w                                         ; w = REG2L
                      00162 
                      00163 
0024   2813           00164         goto            loop                                            ; Desvia para loop infinito
                      00165         
                      00166         
                      00167         
                      00168 ; --- SubRotinas ---
                      00169 
0025                  00170 configura_ADC:
                      00171 
0025   1683           00172         bank1                                                                   ; Seleciona o banco 1 de
                             memória
0026   300E           00173         movlw           H'0E'                                           ; w = OEh
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0027   009F           00174         movwf           ADCON1                                          ; Justificado a esquerda, Fosc/2
                            , apenas AN0 habilitado
0028   1283           00175         bank0                                                                   ; Seleciona o banco 0 de
                             memória
0029   3041           00176         movlw           H'41'                                           ; w = 41h
002A   009F           00177         movwf           ADCON0                                          ; Fosc/8, canal 0 de conversão e
                             liga o conversor AD
                      00178         
002B   0008           00179         return                                                                  ; Retorna para endereço 
                            onde a subrotina foi chamada
                      00180 
                      00181 
                      00182 ;========================================================================================
                      00183 ; --- Sub rotina de multiplicação (baseada na nota de aplicação AN544 da Microchip) ---
                      00184 mult    MACRO   bit                                                     ;Inicio da macro de multiplicaçã
                            o
                      00185 
                      00186         btfsc           REG_MULT1,bit                           ;bit atual de REG_MULT1 limpo?
                      00187         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
                      00188         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
                      00189         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                      00190 
                      00191         endm                                                                    ;fim da macro
                      00192 
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00193 
002C                  00194 multip:
                      00195 
002C   01AB           00196         clrf            AUX_H                                           ;limpa AUX_H
002D   01AC           00197         clrf            AUX_L                                           ;limpa AUX_L
002E   082F           00198         movf            REG_MULT2,W                                     ;move o conteúdo de REG_MULT2 pa
                            ra Work
002F   1003           00199         bcf                     STATUS,C                                        ;limpa o bit de carry
                      00200 
                      00201         mult            0                                                       ;chama macro para cada u
                            m dos 7 bits
                          M 
0030   182E               M         btfsc           REG_MULT1,0                             ;bit atual de REG_MULT1 limpo?
0031   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
0032   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
0033   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00202         mult            1                                                       ;de REG_MULT1
                          M 
0034   18AE               M         btfsc           REG_MULT1,1                             ;bit atual de REG_MULT1 limpo?
0035   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
0036   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
0037   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00203         mult            2                                                       ;
                          M 
0038   192E               M         btfsc           REG_MULT1,2                             ;bit atual de REG_MULT1 limpo?
0039   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
003A   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
003B   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00204         mult            3                                                       ;
                          M 
003C   19AE               M         btfsc           REG_MULT1,3                             ;bit atual de REG_MULT1 limpo?
003D   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
003E   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
003F   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00205         mult            4                                                       ;
                          M 
0040   1A2E               M         btfsc           REG_MULT1,4                             ;bit atual de REG_MULT1 limpo?
0041   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
0042   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
0043   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            reita e armazena o resultado nele próprio
                          M 
                      00206         mult            5                                                       ;
                          M 
0044   1AAE               M         btfsc           REG_MULT1,5                             ;bit atual de REG_MULT1 limpo?
0045   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
0046   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
0047   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00207         mult            6                                                       ;
                          M 
0048   1B2E               M         btfsc           REG_MULT1,6                             ;bit atual de REG_MULT1 limpo?
0049   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
004A   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
004B   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00208         mult            7                                                       ;
                          M 
004C   1BAE               M         btfsc           REG_MULT1,7                             ;bit atual de REG_MULT1 limpo?
004D   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
004E   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
004F   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00209 
0050   0008           00210         return                                                                  ;retorna
                      00211 
                      00212 
                      00213 ;========================================================================================
                      00214 ; --- Sub rotina de divisão (baseada na nota de aplicação AN544 da Microchip) ---       
                      00215         
                      00216 ;========================================================================================
                      00217 ;                       Double Precision Division
                      00218 ;========================================================================================
                      00219 ;   Division : ACCb(16 bits) / ACCa(16 bits) -> ACCb(16 bits) with
                      00220 ;                                               Remainder in ACCc (16 bits)
                      00221 ;      (a) Load the Denominator in location ACCaHI & ACCaLO ( 16 bits )
                      00222 ;      (b) Load the Numerator in location ACCbHI & ACCbLO ( 16 bits )
                      00223 ;      (c) CALL D_divF
                      00224 ;      (d) The 16 bit result is in location ACCbHI & ACCbLO
                      00225 ;      (e) The 16 bit Remainder is in locations ACCcHI & ACCcLO
                      00226 ;****************************************************************************
0051                  00227 divid:
                      00228 
0051   3010           00229         movlw           H'10'                                           ;move 16d para Work
0052   00AD           00230         movwf           AUX_TEMP                                        ;carrega contador para divisão
                      00231 
0053   0825           00232         movf            REG2H,W                                         ;move conteúdo de REG2H para Wor
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            k
0054   00A9           00233         movwf           REG4H                                           ;armazena em REG4H
0055   0826           00234         movf            REG2L,W                                         ;move conteúdo de REG2L para Wor
                            k
0056   00AA           00235         movwf           REG4L                                           ;armazena em REG4L
0057   01A5           00236         clrf            REG2H                                           ;limpa REG2H
0058   01A6           00237         clrf            REG2L                                           ;limpa REG2L
0059   01A7           00238         clrf            REG3H                                           ;limpa REG3H
005A   01A8           00239         clrf            REG3L                                           ;limpa REG3L
                      00240 
005B                  00241 DIV
005B   1003           00242         bcf                     STATUS,C                                        ;limpa bit de carry
005C   0DAA           00243         rlf                     REG4L,F                                         ;rotaciona REG4L para es
                            querda e armazena nele próprio
005D   0DA9           00244         rlf                     REG4H,F                                         ;rotaciona REG4H para es
                            querda e armazena nele próprio
005E   0DA8           00245         rlf                     REG3L,F                                         ;rotaciona REG3L para es
                            querda e armazena nele próprio 
005F   0DA7           00246         rlf                     REG3H,F                                         ;rotaciona REG3H para es
                            querda e armazena nele próprio 
0060   0823           00247         movf            REG1H,W                                         ;move conteúdo de REG1H para Wor
                            k
0061   0227           00248         subwf           REG3H,W                                         ;Work = REG3H - REG1H
0062   1D03           00249         btfss           STATUS,Z                                        ;Resultado igual a zero?
0063   2866           00250         goto            NOCHK                                           ;Não. Desvia para NOCHK
0064   0824           00251         movf            REG1L,W                                         ;Sim. Move conteúdo de REG1L par
                            a Work
0065   0228           00252         subwf           REG3L,W                                         ;Work = REG3L - REG1L
                      00253          
0066                  00254 NOCHK
0066   1C03           00255         btfss           STATUS,C                                        ;Carry setado?
0067   286F           00256         goto            NOGO                                            ;Não. Desvia para NOGO
0068   0824           00257         movf            REG1L,W                                         ;Sim. Move conteúdo de REG1L par
                            a Work
0069   02A8           00258         subwf           REG3L,F                                         ;Work = REG3L - REG1L
006A   1C03           00259         btfss           STATUS,C                                        ;Carry setado?
006B   03A7           00260         decf            REG3H,F                                         ;decrementa REG3H 
006C   0823           00261         movf            REG1H,W                                         ;move conteúdo de REG1H para Wor
                            k
006D   02A7           00262         subwf           REG3H,F                                         ;Work = REG3H - REG1H
006E   1403           00263         bsf                     STATUS,C                                        ;seta carry
                      00264          
006F                  00265 NOGO
006F   0DA6           00266         rlf                     REG2L,F                                         ;rotaciona REG2L para es
                            querda e salva nele próprio
0070   0DA5           00267         rlf                     REG2H,F                                         ;rotaciona REG2H para es
                            querda e salva nele próprio
0071   0BAD           00268         decfsz          AUX_TEMP,F                                      ;decrementa AUX_TEMP. Chegou em 
                            zero?
0072   285B           00269         goto            DIV                                                     ;Não. Continua processo 
                            de divisão
0073   0008           00270         return                                                                  ;Sim. Retorna
                      00271         
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00272         
                      00273         
                      00274 ;========================================================================================       
                      00275 
                      00276 
                      00277 ; --- Fim do programa ---
                      00278 
                      00279         end                                                                             ; Final do progr
                            ama
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE 10


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AUX_H                             0000002B
AUX_L                             0000002C
AUX_TEMP                          0000002D
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE 11


SYMBOL TABLE
  LABEL                             VALUE 

CHS2                              00000005
CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DEZ_A                             00000032
DEZ_B                             00000033
DIV                               0000005B
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE 12


SYMBOL TABLE
  LABEL                             VALUE 

INTF                              00000001
IRP                               00000007
NOCHK                             00000066
NOGO                              0000006F
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE 13


SYMBOL TABLE
  LABEL                             VALUE 

RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
REG1H                             00000023
REG1L                             00000024
REG2H                             00000025
REG2L                             00000026
REG3H                             00000027
REG3L                             00000028
REG4H                             00000029
REG4L                             0000002A
REG_AUX                           00000030
REG_MULT1                         0000002E
REG_MULT2                         0000002F
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE 14


SYMBOL TABLE
  LABEL                             VALUE 

SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STATUS_TEMP                       00000021
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE 15


SYMBOL TABLE
  LABEL                             VALUE 

TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
UNI                               00000031
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
W_TEMP                            00000020
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
MPASM  5.51                    VOLTIMETRO.ASM   9-9-2020  16:05:35         PAGE 16


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F876A                         00000001
__DEBUG                           1
adc                               00000022
bank0                             bcf     STATUS,RP0
bank1                             bsf     STATUS,RP0
configura_ADC                     00000025
cont1                             00000023
cont2                             000000A1
divid                             00000051
espera_leitura                    00000014
exit_ISR                          00000008
inicio                            0000000D
loop                              00000013
mult                              
multip                            0000002C


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXX------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   113
Program Memory Words Free:  8079


Errors   :     0
Warnings :     2 reported,     0 suppressed
Messages :     3 reported,     0 suppressed

