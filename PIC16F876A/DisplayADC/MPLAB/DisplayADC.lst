MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;
                      00002 ;               O objetivo deste programa é mostrar no display a leitura que esta sendo feita no ADC.
                      00003 ;
                      00004 ;               No debug e na prática o programa e o circuito funcionaram perfeitamente.
                      00005 ;
                      00006 
                      00007 
                      00008         list p=16f876a                                                  ; Informa o microcontrolador uti
                            lizado
                      00009         
                      00010         
                      00011 ; --- Documentação ---
                      00012 
                      00013 
                      00014         #include        <p16f876a.inc>                          ; Inclui o arquivo que contém os registr
                            adores do Pic
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F876A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00524         LIST
                      00015         
                      00016         
                      00017 ; --- Fuse bits ---
                      00018 
                      00019         
2007   3F31           00020         __config        _XT_OSC & _WDT_OFF & _PWRTE_ON & _BOREN_OFF & _LVP_OFF  & _CP_OFF & _CPD_OFF
                      00021         
                      00022         ; Configura clock  4MHz, liga o Power Up Timer e desliga o Master Clear
                      00023         
                      00024         
                      00025 ; --- Paginação de memória ---
                      00026 
                      00027         
                      00028         #define         bank0   bcf     STATUS,RP0              ; Cria mnemônico para selecionar o banco
                             0 de memória
                      00029         #define         bank1   bsf     STATUS,RP0              ; Cria mnemônico para selecionar o banco
                             1 de memória
                      00030         
                      00031         
                      00032 ; --- Mapeamento de hardware ---
                      00033 
                      00034         #define         digit1  PORTB,3                         ;digito de controle da centena do displa
                            y
                      00035         #define     digit2  PORTB,2                             ;digito de controle da dezena do display
                      00036         #define         digit3  PORTB,1                         ;digito de controle da unidade do displa
                            y
                      00037         
                      00038         
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00039 ; --- Registradores de uso geral ---
                      00040 
                      00041 
                      00042         cblock          H'20'                                           ; Endereço de inicio para config
                            uração de registradores de uso geral
                      00043         
  00000020            00044         W_TEMP                                                                  ; Armazena o conteúdo de
                             w temporariamente
  00000021            00045         STATUS_TEMP                                                             ; Armazena o conteúdo de
                             STATUS temporariamente
  00000022            00046         adc                                                                             ; Armazena a lei
                            tura de ADC
                      00047         
  00000023            00048         REG1H                                                                   ;byte alto registrador 1
                             de 16 bits utilizado na rotina de divisão
  00000024            00049         REG1L                                                                   ;byte baixo registrador 
                            1 de 16 bits utilizado na rotina de divisão
  00000025            00050         REG2H                                                                   ;byte alto registrador 2
                             de 16 bits utilizado na rotina de divisão
  00000026            00051         REG2L                                                                   ;byte baixo registrador 
                            2 de 16 bits utilizado na rotina de divisão
  00000027            00052         REG3H                                                                   ;byte alto registrador 3
                             de 16 bits utilizado na rotina de divisão
  00000028            00053         REG3L                                                                   ;byte baixo registrador 
                            3 de 16 bits utilizado na rotina de divisão
  00000029            00054         REG4H                                                                   ;byte alto registrador 4
                             de 16 bits utilizado na rotina de divisão
  0000002A            00055         REG4L                                                                   ;byte baixo registrador 
                            4 de 16 bits utilizado na rotina de divisão
  0000002B            00056         AUX_H                                                                   ;byte baixo de registrad
                            or de 16 bits para retornar valor da div
  0000002C            00057         AUX_L                                                                   ;byte baixo de registrad
                            or de 16 bits para retornar valor da div
  0000002D            00058         AUX_TEMP                                                                ;contador temporário usa
                            do na rotina de divisão
  0000002E            00059         REG_MULT1                                                               ;registrador 1 para mult
                            iplicação
  0000002F            00060         REG_MULT2                                                               ;registrador 2 para mult
                            iplicação
  00000030            00061         REG_AUX                                                                 ;registrador auxiliar
  00000031            00062         UNI                                                                             ;armazena unidad
                            e
  00000032            00063         DEZ_A                                                                   ;armazena unidade da dez
                            ena
  00000033            00064         DEZ_B                                                                   ;armazena dezena
                      00065         
  00000034            00066         counter                                                                 ;Registrador auxiliar de
                             contagem
  00000035            00067         CEN_DISP                                                                ;Centena do número exibi
                            do no display
  00000036            00068         DEZ_DISP                                                                ;Dezena do número exibid
                            o no display
  00000037            00069         UNI_DISP                                                                ;Unidade do número exibi
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            do no display
                      00070         
                      00071         
                      00072         endc                                                                    ; Fim da configuração de
                             registradores de uso geral
                      00073         
Warning[207]: Found label after column 1. (cont1)
  00000023            00074         cont1           equ             H'23'                           ; Contador auxiliar no banco 0 d
                            e memória
Warning[207]: Found label after column 1. (cont2)
  000000A1            00075         cont2           equ             H'A1'                           ; Contador auxiliar no banco 1 d
                            e memória
                      00076         
                      00077 ; --- Vetor de Reset ---
                      00078 
                      00079         
0000                  00080         org                     H'0000'                                         ; Endereço de origem do 
                            vetor de Reset
                      00081         
0000   282C           00082         goto            inicio                                          ; Desvia para o programa princip
                            al      
                      00083         
                      00084         
                      00085 ; --- Vetor de Interrupção ---
                      00086 
                      00087         
0004                  00088         org                     H'0004'                                         ; Endereço de origem do 
                            vetor de Interrupção
                      00089         
                      00090 ; -- Salvamento de contexto --
                      00091 
0004   00A0           00092         movwf           W_TEMP                                          ; W_TEMP = w
0005   0E03           00093         swapf           STATUS,w                                        ; w = STATUS (com nibbles invert
                            idos)
0006   1283           00094         bank0                                                                   ; Seleciona o banco 0 de
                             memória
0007   00A1           00095         movwf           STATUS_TEMP                                     ; STATUS_TEMP = STATUS (com nibb
                            les invertidos)
                      00096         
                      00097 ; -- Fim do salvamento de contexto
                      00098 
                      00099         ; Desenvolvimento da ISR...
                      00100         
0008   1D0B           00101         btfss           INTCON,T0IF                                     ;Houve overflow do Timer0?
0009   2827           00102         goto            exit_ISR                                        ;Não, desvia para saída da inter
                            rupção
000A   110B           00103         bcf                     INTCON,T0IF                                     ;Sim, limpa flag
                      00104         
                      00105         
000B   1986           00106         btfsc           digit1                                          ;Digito da centena ativado?
000C   2818           00107         goto            copy_dez                                        ;Sim, desvia para atualizar dez
000D   1906           00108         btfsc           digit2                                          ;Não. Digito da dez ativado?
000E   2820           00109         goto            copy_uni                                        ;Sim, desvia para atualizar unid
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ade
000F   1886           00110         btfsc           digit3                                          ;Não. Digito da unidade ativado?
                      00111                                                                                         ;Sim, atualiza c
                            entena
                      00112         
0010                  00113 copy_cen:
                      00114 
0010   1106           00115         bcf                     digit2                                          ;Desliga digito da dezen
                            a
0011   1086           00116         bcf                     digit3                                          ;Desliga digito da unida
                            de
0012   0187           00117         clrf            PORTC                                           ;limpa PORTC
0013   1586           00118         bsf                     digit1                                          ;Liga digito da centena
0014   0835           00119         movf            CEN_DISP,W                                      ;move conteúdo de centena para w
                            ork
0015   20B2           00120         call            send_disp                                       ;chama sub rotina para atualizar
                             display
0016   0087           00121         movwf           PORTC                                           ;PORTC recebe o dado convertido
0017   2827           00122         goto            exit_ISR                                        ;desvia para saída da interrupçã
                            o
                      00123         
                      00124         
0018                  00125 copy_dez:
                      00126 
0018   1086           00127         bcf                     digit3                                          ;Desliga digito da unida
                            de
0019   1186           00128         bcf                     digit1                                          ;Desliga digito da cente
                            na
001A   0187           00129         clrf            PORTC                                           ;limpa PORTC
001B   1506           00130         bsf                     digit2                                          ;Liga digito mais signif
                            icativo
001C   0836           00131         movf            DEZ_DISP,W                                      ;move conteúdo de dezena para wo
                            rk
001D   20B2           00132         call            send_disp                                       ;chama sub rotina para atualizar
                             display
001E   0087           00133         movwf           PORTC                                           ;PORTC recebe o dado convertido
001F   2827           00134         goto            exit_ISR                                        ;desvia para saída da interrupçã
                            o
                      00135         
0020                  00136 copy_uni:
                      00137 
0020   1186           00138         bcf                     digit1                                          ;Limpa digito da centena
0021   1106           00139         bcf                     digit2                                          ;Limpa digito da dezena
0022   0187           00140         clrf            PORTC                                           ;Limpa PORTC
0023   1486           00141         bsf                     digit3                                          ;Liga digito da unidade
0024   0837           00142         movf            UNI_DISP,W                                      ;move conteúdo de unidade para w
                            ork
0025   20B2           00143         call            send_disp                                       ;chama sub rotina para atualizar
                             display
0026   0087           00144         movwf           PORTC                                           ;PORTC recebe o dado convertido
                      00145         ;goto           exit_ISR                                        ;desvia para saída da interrupçã
                            o
                      00146         
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00147 ; -- Recuperação de contexto --
                      00148 
0027                  00149 exit_ISR:
                      00150 
0027   0E21           00151         swapf           STATUS_TEMP,w                           ; w = STATUS (original)
0028   0083           00152         movwf           STATUS                                          ; STATUS = STATUS (original)
0029   0EA0           00153         swapf           W_TEMP,F                                        ; W_TEMP = w (com nibbles invert
                            idos)
002A   0E20           00154         swapf           W_TEMP,w                                        ; W_TEMP = w (original)
                      00155         
002B   0009           00156         retfie                                                                  ; Retorna para o endereç
                            o que estava quando ocorreu a interrupção
                      00157         
                      00158 ; -- Fim da recuperação de contexto --
                      00159 
                      00160 
                      00161 ; --- Programa principal ---
                      00162 
002C                  00163 inicio:                                                                         ; Cria label do programa
                             principal
                      00164 
002C   30A0           00165         movlw           H'A0'                                           ;move literal 00h para Work
002D   008B           00166         movwf           INTCON                                          ;habilita interrupção global e d
                            o Timer0
                      00167 
002E   1683           00168         bank1                                                                   ; Seleciona banco 1 de m
                            emória
002F   30FF           00169         movlw           H'FF'                                           ; w = FF
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0030   0085           00170         movwf           TRISA                                           ; Configura todo PORTA como entr
                            ada
0031   30F1           00171         movlw           H'F1'                                           ; w = 00
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0032   0086           00172         movwf           TRISB                                           ; Configura RB1, RB2 e RB3 como 
                            saída digital
0033   3080           00173         movlw           H'80'                                           ; w = 00
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0034   0087           00174         movwf           TRISC                                           ; Configura apenas RB7 como entr
                            ada digital, o resto como saída
0035   30D3           00175         movlw           H'D3'                                           ;move literal D3h para Work
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0036   0081           00176         movwf           OPTION_REG                                      ;Timer0 incrementa com ciclo de 
                            máquina, ps 1:32
0037   204B           00177         call            configura_ADC                           ; Chama subrotina configura_ADC
0038   1283           00178         bank0                                                                   ; Seleciona banco 0 de m
                            emória
0039   3007           00179         movlw           H'07'                                           ;move literal 07h para work
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
003A   009C           00180         movwf           CMCON                                           ;desabilita comparadores
                      00181         
003B   1186           00182         bcf                     digit1                                          ;desativa digito da cent
                            ena
003C   01B7           00183         clrf            UNI_DISP                                        ;limpa unidade do display
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003D   01B6           00184         clrf            DEZ_DISP                                        ;limpa dezena do display
003E   01B5           00185         clrf            CEN_DISP                                        ;limpa centena do display
                      00186 
                      00187 ; -- Loop infinito --
                      00188 
003F                  00189 loop:                                                                           ; Cria label para loop i
                            nfinito
                      00190 
003F   151F           00191         bsf                     ADCON0,GO_DONE                          ; Inicia leitura do ADC
                      00192         
0040                  00193 espera_leitura:
                      00194 
0040   191F           00195         btfsc           ADCON0,GO_DONE                          ;GO_DONE limpo?
0041   2840           00196         goto            espera_leitura                          ;Não. Aguarda
                      00197         
0042   081E           00198         movf            ADRESH,W                                        ;Sim. Move conteúdo de ADRESH em
                             Work
                      00199         
                      00200         
                      00201         ;movwf          REG_MULT1                                       ;move conteúdo de Work para REG_
                            MULT1
                      00202         ;movlw          D'250'                                          ;move literal 250 para Work
                      00203         ;movwf          REG_MULT2                                       ;carrega 250 em REG_MULT2
                      00204         ;call           multip                                          ;chama sub rotina para multiplic
                            ação
                      00205         ;movf           AUX_H,W                                         ;move conteúdo de AUX_H para Wor
                            k
                      00206         ;movwf          REG2H                                           ;armazena resultado da multiplic
                            ação
                      00207         ;movf           AUX_L,W                                         ;move conteúdo de AUX_L para Wor
                            k
                      00208         ;movwf          REG2L                                           ;armazena resultado da multiplic
                            ação
                      00209         ;clrf           REG1H                                           ;limpa REG1H
                      00210         ;movlw          D'255'                                          ;move 255 para WOrk
                      00211         ;movwf          REG1L                                           ;armazena 255 em REG1L
                      00212         ;call           divid                                           ;chama sub rotina para divisão
                      00213         ;movf           REG2L,W                                         ;move conteúdo de REG2L para Wor
                            k
                      00214         
                      00215         
0043   2052           00216         call            conv_binToDec                           ;chama sub rotina para conversão binária
                             em decimal
                      00217         
0044   0831           00218         movf            UNI,W                                           ;move conteúdo de UNI para Work
0045   00B7           00219         movwf           UNI_DISP                                        ;atualiza unidade do display
0046   0832           00220         movf            DEZ_A,W                                         ;move conteúdo de DEZ_A para Wor
                            k
0047   00B6           00221         movwf           DEZ_DISP                                        ;atualiza dezena do display
0048   0833           00222         movf            DEZ_B,W                                         ;move conteúdo de DEZ_B para Wor
                            k
0049   00B5           00223         movwf           CEN_DISP                                        ;atualiza centena do display
                      00224 
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00225 
004A   283F           00226         goto            loop                                            ; Desvia para loop infinito
                      00227         
                      00228         
                      00229         
                      00230 ; --- SubRotinas ---
                      00231 
004B                  00232 configura_ADC:
                      00233 
004B   1683           00234         bank1                                                                   ; Seleciona o banco 1 de
                             memória
004C   300E           00235         movlw           H'0E'                                           ; w = OEh
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
004D   009F           00236         movwf           ADCON1                                          ; Justificado a esquerda, Fosc/2
                            , apenas AN0 habilitado
004E   1283           00237         bank0                                                                   ; Seleciona o banco 0 de
                             memória
004F   3041           00238         movlw           H'41'                                           ; w = 41h
0050   009F           00239         movwf           ADCON0                                          ; Fosc/8, canal 0 de conversão e
                             liga o conversor AD
                      00240         
0051   0008           00241         return                                                                  ; Retorna para endereço 
                            onde a subrotina foi chamada
                      00242 
                      00243 ;========================================================================================
                      00244 ; --- Sub rotina de conversão Binário para Decimal ---
                      00245 ;**********************************************************************
                      00246 ;* Ajuste decimal
                      00247 ;* W [HEX] =  dezena [DEC] ; unidade [DEC]
                      00248 ;* Conforme indicado no livro - "Conectando o PIC - Recursos avançados"
                      00249 ;* Autores Nicolás César Lavinia e David José de Souza
                      00250 ;*
                      00251 ;* Alterada por Márcio José Soares para uso com números com duas dezenas e uma unidade
                      00252 ;* Artigo disponível em arnerobotics.com.br
                      00253 ;*
                      00254 ;* Adaptado por Wagner Rambo para aplicação no projeto Voltímetro
                      00255 ;*
                      00256 ;* Recebe o valor atual de Work e retorna os registradores de usuário
                      00257 ;* DEZ_A, DEZ_B e UNI o número BCD correspondente.
                      00258 
0052                  00259 conv_binToDec:
                      00260 
0052   00B0           00261         movwf           REG_AUX                                         ;salva valor a converter em REG_
                            AUX
0053   01B1           00262         clrf            UNI                                                     ;limpa unidade
0054   01B2           00263         clrf            DEZ_A                                           ;limpa dezena A
0055   01B3           00264         clrf            DEZ_B                                           ;limpa dezena B
                      00265 
0056   08B0           00266         movf            REG_AUX,F                                       ;REG_AUX = REG_AUX
0057   1903           00267         btfsc           STATUS,Z                                        ;valor a converter resultou em z
                            ero?
0058   0008           00268         return                                                                  ;Sim. Retorna
                      00269 
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0059                  00270 start_adj:
                      00271                                                 
0059   0AB1           00272         incf            UNI,F                                           ;Não. Incrementa UNI
005A   0831           00273         movf            UNI,W                                           ;move o conteúdo de UNI para Wor
                            k
005B   3A0A           00274         xorlw           H'0A'                                           ;W = UNI XOR 10d
005C   1D03           00275         btfss           STATUS,Z                                        ;Resultou em 10d?
005D   2867           00276         goto            end_adj                                         ;Não. Desvia para end_adj
                      00277                                                  
005E   01B1           00278         clrf            UNI                                                     ;Sim. Limpa registrador 
                            UNI
005F   0832           00279         movf            DEZ_A,W                                         ;Move o conteúdo de DEZ_A para W
                            ork
0060   3A09           00280         xorlw           H'09'                                           ;W = DEZ_A XOR 9d
0061   1D03           00281         btfss           STATUS,Z                                        ;Resultou em 9d?
0062   2866           00282         goto            incDezA                                         ;Não, valor menor que 9. Increme
                            nta DEZ_A
0063   01B2           00283         clrf            DEZ_A                                           ;Sim. Limpa registrador DEZ_A
0064   0AB3           00284         incf            DEZ_B,F                                         ;Incrementa registrador DEZ_B
0065   2867           00285         goto            end_adj                                         ;Desvia para end_adj
                      00286         
0066                  00287 incDezA:
0066   0AB2           00288         incf            DEZ_A,F                                         ;Incrementa DEZ_A
                      00289         
0067                  00290 end_adj:
0067   0BB0           00291         decfsz          REG_AUX,F                                       ;Decrementa REG_AUX. Fim da conv
                            ersão ?
0068   2859           00292         goto            start_adj                                       ;Não. Continua
0069   0008           00293         return                                                                  ;Sim. Retorna
                      00294 
                      00295 
                      00296 ;========================================================================================
                      00297 ; --- Sub rotina de multiplicação (baseada na nota de aplicação AN544 da Microchip) ---
                      00298 mult    MACRO   bit                                                     ;Inicio da macro de multiplicaçã
                            o
                      00299 
                      00300         btfsc           REG_MULT1,bit                           ;bit atual de REG_MULT1 limpo?
                      00301         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
                      00302         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
                      00303         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                      00304 
                      00305         endm                                                                    ;fim da macro
                      00306 
                      00307 
006A                  00308 multip:
                      00309 
006A   01AB           00310         clrf            AUX_H                                           ;limpa AUX_H
006B   01AC           00311         clrf            AUX_L                                           ;limpa AUX_L
006C   082F           00312         movf            REG_MULT2,W                                     ;move o conteúdo de REG_MULT2 pa
                            ra Work
006D   1003           00313         bcf                     STATUS,C                                        ;limpa o bit de carry
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00314 
                      00315         mult            0                                                       ;chama macro para cada u
                            m dos 7 bits
                          M 
006E   182E               M         btfsc           REG_MULT1,0                             ;bit atual de REG_MULT1 limpo?
006F   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
0070   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
0071   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00316         mult            1                                                       ;de REG_MULT1
                          M 
0072   18AE               M         btfsc           REG_MULT1,1                             ;bit atual de REG_MULT1 limpo?
0073   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
0074   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
0075   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00317         mult            2                                                       ;
                          M 
0076   192E               M         btfsc           REG_MULT1,2                             ;bit atual de REG_MULT1 limpo?
0077   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
0078   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
0079   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00318         mult            3                                                       ;
                          M 
007A   19AE               M         btfsc           REG_MULT1,3                             ;bit atual de REG_MULT1 limpo?
007B   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
007C   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
007D   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00319         mult            4                                                       ;
                          M 
007E   1A2E               M         btfsc           REG_MULT1,4                             ;bit atual de REG_MULT1 limpo?
007F   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
0080   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
0081   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00320         mult            5                                                       ;
                          M 
0082   1AAE               M         btfsc           REG_MULT1,5                             ;bit atual de REG_MULT1 limpo?
0083   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
0084   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0085   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00321         mult            6                                                       ;
                          M 
0086   1B2E               M         btfsc           REG_MULT1,6                             ;bit atual de REG_MULT1 limpo?
0087   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
0088   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
0089   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00322         mult            7                                                       ;
                          M 
008A   1BAE               M         btfsc           REG_MULT1,7                             ;bit atual de REG_MULT1 limpo?
008B   07AB               M         addwf           AUX_H,F                                         ;Não. Acumula soma de AUX_H
008C   0CAB               M         rrf                     AUX_H,F                                         ;rotaciona AUX_H para di
                            reita e armazena o resultado nele próprio
008D   0CAC               M         rrf                     AUX_L,F                                         ;rotaciona AUX_L para di
                            reita e armazena o resultado nele próprio
                          M 
                      00323 
008E   0008           00324         return                                                                  ;retorna
                      00325 
                      00326 
                      00327 ;========================================================================================
                      00328 ; --- Sub rotina de divisão (baseada na nota de aplicação AN544 da Microchip) ---       
                      00329         
                      00330 ;========================================================================================
                      00331 ;                       Double Precision Division
                      00332 ;========================================================================================
                      00333 ;   Division : ACCb(16 bits) / ACCa(16 bits) -> ACCb(16 bits) with
                      00334 ;                                               Remainder in ACCc (16 bits)
                      00335 ;      (a) Load the Denominator in location ACCaHI & ACCaLO ( 16 bits )
                      00336 ;      (b) Load the Numerator in location ACCbHI & ACCbLO ( 16 bits )
                      00337 ;      (c) CALL D_divF
                      00338 ;      (d) The 16 bit result is in location ACCbHI & ACCbLO
                      00339 ;      (e) The 16 bit Remainder is in locations ACCcHI & ACCcLO
                      00340 ;****************************************************************************
008F                  00341 divid:
                      00342 
008F   3010           00343         movlw           H'10'                                           ;move 16d para Work
0090   00AD           00344         movwf           AUX_TEMP                                        ;carrega contador para divisão
                      00345 
0091   0825           00346         movf            REG2H,W                                         ;move conteúdo de REG2H para Wor
                            k
0092   00A9           00347         movwf           REG4H                                           ;armazena em REG4H
0093   0826           00348         movf            REG2L,W                                         ;move conteúdo de REG2L para Wor
                            k
0094   00AA           00349         movwf           REG4L                                           ;armazena em REG4L
0095   01A5           00350         clrf            REG2H                                           ;limpa REG2H
0096   01A6           00351         clrf            REG2L                                           ;limpa REG2L
0097   01A7           00352         clrf            REG3H                                           ;limpa REG3H
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0098   01A8           00353         clrf            REG3L                                           ;limpa REG3L
                      00354 
0099                  00355 DIV
0099   1003           00356         bcf                     STATUS,C                                        ;limpa bit de carry
009A   0DAA           00357         rlf                     REG4L,F                                         ;rotaciona REG4L para es
                            querda e armazena nele próprio
009B   0DA9           00358         rlf                     REG4H,F                                         ;rotaciona REG4H para es
                            querda e armazena nele próprio
009C   0DA8           00359         rlf                     REG3L,F                                         ;rotaciona REG3L para es
                            querda e armazena nele próprio 
009D   0DA7           00360         rlf                     REG3H,F                                         ;rotaciona REG3H para es
                            querda e armazena nele próprio 
009E   0823           00361         movf            REG1H,W                                         ;move conteúdo de REG1H para Wor
                            k
009F   0227           00362         subwf           REG3H,W                                         ;Work = REG3H - REG1H
00A0   1D03           00363         btfss           STATUS,Z                                        ;Resultado igual a zero?
00A1   28A4           00364         goto            NOCHK                                           ;Não. Desvia para NOCHK
00A2   0824           00365         movf            REG1L,W                                         ;Sim. Move conteúdo de REG1L par
                            a Work
00A3   0228           00366         subwf           REG3L,W                                         ;Work = REG3L - REG1L
                      00367          
00A4                  00368 NOCHK
00A4   1C03           00369         btfss           STATUS,C                                        ;Carry setado?
00A5   28AD           00370         goto            NOGO                                            ;Não. Desvia para NOGO
00A6   0824           00371         movf            REG1L,W                                         ;Sim. Move conteúdo de REG1L par
                            a Work
00A7   02A8           00372         subwf           REG3L,F                                         ;Work = REG3L - REG1L
00A8   1C03           00373         btfss           STATUS,C                                        ;Carry setado?
00A9   03A7           00374         decf            REG3H,F                                         ;decrementa REG3H 
00AA   0823           00375         movf            REG1H,W                                         ;move conteúdo de REG1H para Wor
                            k
00AB   02A7           00376         subwf           REG3H,F                                         ;Work = REG3H - REG1H
00AC   1403           00377         bsf                     STATUS,C                                        ;seta carry
                      00378          
00AD                  00379 NOGO
00AD   0DA6           00380         rlf                     REG2L,F                                         ;rotaciona REG2L para es
                            querda e salva nele próprio
00AE   0DA5           00381         rlf                     REG2H,F                                         ;rotaciona REG2H para es
                            querda e salva nele próprio
00AF   0BAD           00382         decfsz          AUX_TEMP,F                                      ;decrementa AUX_TEMP. Chegou em 
                            zero?
00B0   2899           00383         goto            DIV                                                     ;Não. Continua processo 
                            de divisão
00B1   0008           00384         return                                                                  ;Sim. Retorna
                      00385         
                      00386         
                      00387         
                      00388 ;========================================================================================       
                      00389 
                      00390 ;========================================================================================
00B2                  00391 send_disp:                                                                      ;Sub rotina para convers
                            ão binário -> display 7 seg
                      00392 
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B2   0782           00393                         addwf           PCL,F                           ;PCL = PCL + W
                      00394                                                 ;' gfedcba'                     ;Posição correta dos seg
                            mentos
00B3   343F           00395                         retlw           B'00111111'                     ;Retorna símbolo '0'
00B4   3406           00396                         retlw           B'00000110'                     ;Retorna símbolo '1' 
00B5   345B           00397                         retlw           B'01011011'                     ;Retorna símbolo '2'
00B6   344F           00398                         retlw           B'01001111'                     ;Retorna símbolo '3'
00B7   3466           00399                         retlw           B'01100110'                     ;Retorna símbolo '4'
00B8   346D           00400                         retlw           B'01101101'                     ;Retorna símbolo '5' 
00B9   347D           00401                         retlw           B'01111101'                     ;Retorna símbolo '6' 
00BA   3407           00402                         retlw           B'00000111'                     ;Retorna símbolo '7' 
00BB   347F           00403                         retlw           B'01111111'                     ;Retorna símbolo '8'
00BC   346F           00404                         retlw           B'01101111'                     ;Retorna símbolo '9' 
                      00405  
                      00406         
                      00407 ;========================================================================================       
                      00408 
                      00409 
                      00410 ; --- Fim do programa ---
                      00411 
Warning[205]: Found directive in column 1. (end)
                      00412 end
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE 13


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AUX_H                             0000002B
AUX_L                             0000002C
AUX_TEMP                          0000002D
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CEN_DISP                          00000035
CHS0                              00000003
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE 14


SYMBOL TABLE
  LABEL                             VALUE 

CHS1                              00000004
CHS2                              00000005
CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DEZ_A                             00000032
DEZ_B                             00000033
DEZ_DISP                          00000036
DIV                               00000099
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE 15


SYMBOL TABLE
  LABEL                             VALUE 

INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
NOCHK                             000000A4
NOGO                              000000AD
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE 16


SYMBOL TABLE
  LABEL                             VALUE 

RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
REG1H                             00000023
REG1L                             00000024
REG2H                             00000025
REG2L                             00000026
REG3H                             00000027
REG3L                             00000028
REG4H                             00000029
REG4L                             0000002A
REG_AUX                           00000030
REG_MULT1                         0000002E
REG_MULT2                         0000002F
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STATUS_TEMP                       00000021
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
UNI                               00000031
UNI_DISP                          00000037
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
W_TEMP                            00000020
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F876A                         00000001
__DEBUG                           1
adc                               00000022
bank0                             bcf     STATUS,RP0
bank1                             bsf     STATUS,RP0
configura_ADC                     0000004B
cont1                             00000023
cont2                             000000A1
conv_binToDec                     00000052
copy_cen                          00000010
copy_dez                          00000018
copy_uni                          00000020
counter                           00000034
digit1                            PORTB,3
digit2                            PORTB,2
digit3                            PORTB,1
divid                             0000008F
end_adj                           00000067
espera_leitura                    00000040
exit_ISR                          00000027
incDezA                           00000066
inicio                            0000002C
loop                              0000003F
mult                              
multip                            0000006A
send_disp                         000000B2
start_adj                         00000059
MPASM  5.51                    DISPLAYADC.ASM   9-10-2020  16:50:47         PAGE 20


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXX---
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   186
Program Memory Words Free:  8006


Errors   :     0
Warnings :     3 reported,     0 suppressed
Messages :     6 reported,     0 suppressed

